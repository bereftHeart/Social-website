version: "3.7"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        user: azura
        uid: 1000
    image: social-app
    container_name: social-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    depends_on:
      db:
        condition: service_healthy
    networks:
      - social

  db:
    image: mysql:8.0
    container_name: social-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    # ports:
    #   - 3307:3306
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - social

  nginx:
    image: nginx:alpine
    container_name: social-webserver
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - social

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: social-pma
    environment:
      PMA_ARBITRARY: 1
      PMA_PORT: ${DB_PORT}
      PMA_HOST: ${DB_HOST}
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
      PMA_ROOT_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db
    ports:
      - 8888:80
    networks:
      - social

  npm:
    image: node:alpine
    container_name: npm
    volumes:
      - ./:/var/www
      - .env:/var/www/.env
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www
    profiles: ["npm"]
    entrypoint: ["npm"]
    networks:
      - social

networks:
  social:
    driver: bridge

volumes:
  dbdata:
    driver: local
